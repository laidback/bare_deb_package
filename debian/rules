#!/usr/bin/make -f

# This file was generated by lc@f03.eu

# The following targets are required and must be implemented by debian/rules.
# clean, binary, binary-arch, binary-indep, build
# Them are called by dpkg-buildpackage
#
# build, build-arch, build-indep (required)
# binary, binary-arch, binary-indep (required)
# clean (required)
# get-orig-source (optional)
# patch (optional)

# Supported make variables: @see: dpkg-architecture
# DEB_*_ARCH (the Debian architecture)
# DEB_*_ARCH_CPU (the Debian CPU name)
# DEB_*_ARCH_OS (the Debian System name)
# DEB_*_GNU_TYPE (the GNU style architecture specification string)
# DEB_*_GNU_CPU (the CPU part of DEB_*_GNU_TYPE)
# DEB_*_GNU_SYSTEM (the System part of DEB_*_GNU_TYPE)
#
# where * is either BUILD for specification of the build architecture or
# HOST for specification of the host architecture.

# DEB_BUILD_OPTIONS environment variable
# Use multiple flags (e.g. flag or flag=flag) and separate them with a space
#
# nocheck
# noopt
# nostrip
# parallel=n

# If you want some more env settings, do:
# @see: man debhelper
# export DH_VERBOSE=1
# export DH_OPTIONS=
# export DH_COMPAT=
# export DH_NO_ACT=
# export DH_ALWAYS_EXCLUDE=

#DEB_PYTHON_INSTALL_ARGS_ALL=--record=INSTALLED_FILES --install-layout=deb


# rules to build the package

override_dh_auto_clean:
override_dh_auto_build:
override_dh_auto_test:

# try to auto guess what to install and where,
# or pass parameters to the underlying mechanism behind
# the dh_auto_configure (e.g. with python it is )
override_dh_auto_configure:
	dh_auto_configure -- --prefix=/usr/local

override_dh_auto_install:

# build debian package
override_dh_builddeb:
	dh_builddeb
		# where to put generated .deb file toy
		--destdir=director 
		
		# alternative name for generated .deb
		--filename=name     
		
		# pass params to dpkg-deb when used to build package
		-uparams,--params   

# clean up package build directories
override_dh_clean:
	dh_clean
		# do not delete debian files. For rules file with
		# 2 or more targets to build.
		-k/--keep

		 # only clean package build directories, no other files
		-d,--dirs-only
		
		# exclude files that contain "item" anywhere in
		# their filename from being deleted
		-Xitem,--exclude=item 
		
		# delete these files too.
		file ...

# compress files and fix symlinks in package build directory
override_dh_compress:
	dh_compress

		# exclude files that contain "item" anywhere in
		# their filename from being compressed
		-Xitem,--exclude=item

		# compress all files specified by command line params
		# ALL packages acted on
		-A,--all

		# add these files to the list of files to compress.
		file ...

# register .desktop files
# currently it does not install any files. It adds maintainer script fragments
# to call "update-desktop-database"
override_dh_desktop:
	dh_desktop

# fix permissions of files in package build directories
override_dh_fixperms:
	dh_fixperms
		# exclude files that contain "item" anywhere
		# in their filename from having their permissions changed
		-Xitem,--exclude item  

# generate GConf schema registration scripts
override_dh_gconf:
	dh_gconf
		# 2-digit number, default is 10
		--priority priority     

# generate and install control file
override_dh_gencontrol:
	dh_gencontrol
		-uparams,--dpkg-gencontrol-params=params
		# pass "params" to dpkg-gencontrol
		--params

# update freedesktop icon caches
override_dh_icons:
	dh_icons
		# Do not modify maintainer scripts
		-n,--noscripts

# install files into package build directories, can also use wildcards for filenames
# @see: package.name.install
override_dh_install:
	dh_install
		# exclude files that contain "item" anywhere
		# in their filename from being installed
		-Xitem,--exclude=item
		
		# install files by name. First strip off debian/tmp/
		# from the filename, then copy files to the remaining
		# name. E.g. /debian/tmp/usr/bin -> /usr/bin
		--autodest
		
		# compare files and installed files and tell us if all files were missing
		--list-missing
		
		# like list-missing, except it fails on missing files
		--fail-missing
		
		# makes all source files be found under dir.
		--sourcedir=dir
		
		# List of files or directories to install and where
		file [...] dest

# install and register SGML Catalogs
override_dh_installcatalogs:
	dh_installcatalogs
		# do not modify postinst/postrm/prerm
		-n,--noscripts

# install changelogs into package build directories
# check if package is a debian native package, and if so, it
# installs debian/changelog into /usr/share/doc/package/changelog
# If package.name.changelog exists, it is used in preference to
# debian/changelog
override_dh_installchangelogs:
	dh_installchangelogs
		# Keep the original name of the upstream changelog
		-k,--keep
		
		# Install this file as teh upstream changelog
		upstream

# install cron scripts into etc/cron.*
override_dh_installcron:
	dh_installcron
		# Name of the cron file to install
		--name=name

# install files into the DEBIAN directory
# Automatically installs the following files from debian/ into DEBIAN:
# package.postinst
# package.preinst
# package.postrm
# package.prerm
# package.shlibs
# package.conffiles
# package.triggers
override_dh_installdeb:
	dh_installdeb

# install files used by debconf in package build directories
override_dh_installdebconf:
	dh_installdebconf
		# do not modify postrm script
		-n,--noscripts
		
		# Pass the params to po2debconf
		--params

# create subdirectories in package build directories
# @see: package.name.dirs
override_dh_installdirs:
	dh_installdirs
		# Create any directories specified by command line params in ALL
		# packages acted on, not just the first.
		-A,--all

		# Create these directories in the package build directory of the
		# first package acted on.
		dir ...

# install documentation into package build directories
# @see: package.name.docs
# Example:
override_dh_installdocs:
	dh_installdocs
		# Install all files specified by command line params in ALL packages
		-A,--all

		# Do not modify postinst/prerm scripts.
		-n,--noscripts
		
		# Exclude files that contain "item" anywhere in their filename from
		# being installed. Note that this includes doc-base files.
		-Xitem,--exclude=item

		# Install these files as documentation into the first package
		file ...

# install example files into package build directories
override_dh_installexamples:
	dh_installexamples
		# Install any files specified by command line params in ALL packages
		-A,--all
		
		# Install these files as an example into the first package
		file ...

		# Exclude files that contain "item" anywhere in their filename from
		# being installed
		-Xitem,--exclude=item

# install ifupdown
override_dh_installifupdown:
	dh_installifupdown

# install info
override_dh_installinfo:
	dh_installinfo

override_dh_installinit:
	dh_installinit
		--noscript
		--onlyscripts
		--no-restart-on-upgrade
		--no-start
		--remove-d
		--update-rcd-params=params
		--name=name
		--init-script=scriptname
		--error-handler=function

# install logcheck rulefiles into /etc/logcheck
# @see: package.logcheck.*
# Automatic install of following files, if present:
# debian/package.logcheck.cracking
# debian/package.logcheck.violations
# debian/package.logcheck.violations.ignore
# debian/package.logcheck.ignore.workstation
# debian/package.logcheck.ignore.server
# debian/package.logcheck.ignore.paranoid
override_dh_installlogcheck:
	dh_installlogcheck

# install logrotate config file
# @see: package.name.logrotate
override_dh_installlogrotate:
	dh_installlogrotate
		# use following files in /etc/logrotate.d/name
		--name=name

# install man pages into package build directories
override_dh_installman:
	dh_installman

# install man pages the old way into package build directories
override_dh_installmanpages:
	dh_installmanpages

# create symlinks in package build directories
# @see: debian/package.name.links
override_dh_link:
	dh_link
		# Create any links specified by command line params in ALL packages
		-A,--all

		# Do not correct symlinks that contain "item" anywhere in their
		# filename from being corrected to comply with debian policy
		-Xitem,--exclude=item

		# Create a file named "destination" as a link to a file named
		# "source" in the first package build directory
		source destination ...

# list binary packages debhelper will act on
override_dh_listpackages:
	dh_listpackages

# automatically create shlibs file and call dpkg-gensymbols
override_dh_makeshlibs:
	dh_makeshlibs

# generate DEBIAN/md5sums file
override_dh_md5sums:
	dh_md5sums

# DEPRECATED: use dh_pycentral or dh_pysupport instead
# calculate python dependencies and adds postinst and prerm python scripts
# override_dh_python:
# 	dh_python

# test directory before building debian package
override_dh_testdir:
	# Test for the existance of these files too
	dh_testdir file ...

%:
	dh $@ --with python2 --buildsystem=python_distutils


